@model BikeRentalSystem.Models.Rental

<h2>Add New Rental</h2>

<form asp-action="Create" method="post" enctype="multipart/form-data" class="mt-4">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-lg-4">
                <div class="form-group mb-3">
                    <label asp-for="CustomerID" class="form-label">Customer:</label>
                    <select asp-for="CustomerID" class="form-control" required>
                        <option value="">Select a Customer</option>
                        @if (ViewBag.Customers != null)
                        {
                            foreach (var customer in (ViewBag.Customers as List<BikeRentalSystem.Models.Customer>) ?? new
                            List<BikeRentalSystem.Models.Customer>())
                            {
                                <option value="@customer.CustomerID">@customer.FullName</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="CustomerID" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="BikeID" class="form-label">Bike:</label>
                    <select asp-for="BikeID" id="BikeID" class="form-control" required>
                        <option value="">Select a Bike</option>
                        @if (ViewBag.Bikes != null)
                        {
                            foreach (var bike in (ViewBag.Bikes as List<BikeRentalSystem.Models.Bike>) ?? new
                            List<BikeRentalSystem.Models.Bike>())
                            {
                                <option value="@bike.BikeID" data-price="@bike.RentalPricePerHour">@bike.Model</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="BikeID" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="RentalStartDate" class="form-label">Rental Start:</label>
                    <input asp-for="RentalStartDate" id="RentalStartDate" class="form-control" type="datetime-local"
                        required />
                    <span asp-validation-for="RentalStartDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="RentalEndDate" class="form-label">Rental End:</label>
                    <input asp-for="RentalEndDate" id="RentalEndDate" class="form-control" type="datetime-local"
                        required />
                    <span asp-validation-for="RentalEndDate" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label asp-for="TotalCost" class="form-label">Total Price:</label>
                    <input asp-for="TotalCost" id="TotalCost" class="form-control" type="number" step="0.01" readonly />
                </div>

                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.getElementById('RentalStartDate').addEventListener('change', calculateTotalPrice);
        document.getElementById('RentalEndDate').addEventListener('change', calculateTotalPrice);
        document.getElementById('BikeID').addEventListener('change', calculateTotalPrice);

        function calculateTotalPrice() {
            const start = document.getElementById('RentalStartDate').value;
            const end = document.getElementById('RentalEndDate').value;
            const bikeSelect = document.getElementById('BikeID');

            if (start && end && bikeSelect.value) {
                const rentalStart = new Date(start);
                const rentalEnd = new Date(end);
                const durationInHours = (rentalEnd - rentalStart) / (1000 * 60 * 60);

                if (durationInHours > 0) {
                    const selectedOption = bikeSelect.options[bikeSelect.selectedIndex];
                    const bikePricePerHour = parseFloat(selectedOption.getAttribute("data-price"));
                    const totalPrice = durationInHours * bikePricePerHour;
                    document.getElementById('TotalCost').value = totalPrice.toFixed(2);
                }
            }
        }
    </script>
}
